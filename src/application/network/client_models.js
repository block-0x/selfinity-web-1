const safe2json = require('@extension/safe2json');

const Content = {
    build: init => {
        return {
            // UserId: 0,
            // ParentId: 0,
            score: 0,
            pure_score: 0,
            last_payout_score: 0,
            last_payout_pure_score: 0,
            author_score: 0,
            author_pure_score: 0,
            last_payout_author_score: 0,
            last_payout_author_pure_score: 0,
            voters_score: 0,
            voters_pure_score: 0,
            last_payout_voters_score: 0,
            last_payout_voters_pure_score: 0,
            vector: Array.apply(null, Array(50)).map(() => 0),
            url: '',
            title: '',
            body: '',
            locale: '',
            country_code: '',
            meta: '',
            path: '',
            isAssign: false,
            isStory: true,
            isNsfw: false,
            ishide: false,
            allowEdit: true,
            allowDelete: true,
            allowReply: true,
            allow_votes: true,
            allow_curation_rewards: true,
            max_accepted_payout: '',
            hasPendingPayout: false,
            deadline_cashout_at: new Date(),
            last_score_at: new Date(),
            last_payout_at: new Date(),
            isPrivate: false,
            valid: true,
            permission: true,
            created_at: new Date(),
            updated_at: new Date(),
            ...init,
        };
    },
    toJSON: arg => safe2json(arg),
};

const Request = {
    build: init => {
        return {
            // VoterId: 0,
            // VoteredId: 0,
            locale: '',
            country_code: '',
            score: 0,
            pure_score: 0,
            last_payout_score: 0,
            last_payout_pure_score: 0,
            answer_score: 0,
            answer_pure_score: 0,
            last_payout_answer_score: 0,
            last_payout_answer_pure_score: 0,
            voters_score: 0,
            voters_pure_score: 0,
            last_payout_voters_score: 0,
            last_payout_voters_pure_score: 0,
            vector: Array.apply(null, Array(50)).map(() => 0),
            isResolved: false,
            isAccepted: false,
            isAssign: false,
            url: '',
            title: '',
            body: '',
            meta: '',
            isNsfw: false,
            ishide: false,
            allowEdit: true,
            allowDelete: true,
            allowReply: true,
            allow_votes: true,
            allow_curation_rewards: true,
            max_accepted_payout: '',
            last_score_at: new Date(),
            hasPendingPayout: false,
            deadline_cashout_at: new Date(),
            last_payout_at: new Date(),
            isPrivate: false,
            valid: true,
            permission: true,
            created_at: new Date(),
            updated_at: new Date(),
            ...init,
        };
    },
    toJSON: arg => safe2json(arg),
};

const Label = {
    build: init => {
        return {
            title: '',
            score: 0,
            pure_score: 0,
            vector: Array.apply(null, Array(50)).map(() => 0),
            locale: '',
            isPrivate: false,
            valid: true,
            permission: true,
            created_at: new Date(),
            updated_at: new Date(),
            ...init,
        };
    },
    toJSON: arg => safe2json(arg),
};

const User = {
    build: init => {
        return {
            username: '',
            nickname: '',
            detail: '',
            picture_small: '',
            picture_large: '',
            eth_address: '',
            token_balance: 0,
            score: 0,
            pure_score: 0,
            vector: Array.apply(null, Array(50)).map(() => 0),
            upvote_vector: Array.apply(null, Array(50)).map(() => 0),
            view_vector: Array.apply(null, Array(50)).map(() => 0),
            post_vector: Array.apply(null, Array(50)).map(() => 0),
            follow_vector: Array.apply(null, Array(50)).map(() => 0),
            follower_vector: Array.apply(null, Array(50)).map(() => 0),
            request_post_vector: Array.apply(null, Array(50)).map(() => 0),
            request_upvote_vector: Array.apply(null, Array(50)).map(() => 0),
            label_stock_vector: Array.apply(null, Array(50)).map(() => 0),
            locale: '',
            country_code: '',
            timezone: '',
            verified: true,
            bot: false,
            sign_up_meta: '',
            invite_code: '',
            isPrivate: false,
            permission: true,
            created_at: new Date(),
            updated_at: new Date(),
            ...init,
        };
    },
    toJSON: arg => safe2json(arg),
};

module.exports = {
    Content,
    Request,
    User,
    Label,
};
